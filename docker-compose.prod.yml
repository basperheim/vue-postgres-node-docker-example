version: "3"
services:
  # NodeJS/Express service
  app_be:
    container_name: app_backend
    build:
      context: .
      dockerfile: Dockerfile.backend
      target: dev
    depends_on:
      - app_db
      - app_redis
    ports:
      - "3009:3000"
    env_file:
      - .dev.env
    networks:
      - app_network
    volumes:
      - ./src:/app/src

  # Postgres service
  app_db:
    container_name: app_db
    image: postgres:15.4-alpine3.18
    ports:
      - "54321:5432"
    env_file:
      - .dev.env
    volumes:
      - ./pg-data:/var/lib/postgresql/data
      - ./config/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./config/postgresql.conf:/etc/postgresql/postgresql.conf
    networks:
      - app_network

  # Redis service
  app_redis:
    container_name: app_redis
    image: redis:7.2-alpine3.18
    ports:
      - "6333:6379"
    env_file:
      - .dev.env
    command: ["redis-server"]
    networks:
      app_network:
        ipv4_address: 172.28.1.3
    mem_limit: 100m
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 2s
      retries: 10

  # Nginx/Vue.js service
  app_fe:
    container_name: app_frontend
    build:
      context: .
      dockerfile: Dockerfile.frontend.prod
    ports:
      - "82:80"
    networks:
      - app_network

networks:
  app_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16
